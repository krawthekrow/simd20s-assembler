{"version":3,"sources":["webpack:///webpack/bootstrap b6f0116c72fef2ae71bd","webpack:///./src/GPUSimEntry.jsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/utils/Utils.js","webpack:///./src/GPUSimController.js","webpack:///./src/sim/FullSystemSim.js","webpack:///./src/sim/ScreenSim.js","webpack:///./src/sim/GPUSim.js","webpack:///./src/arch/Arch.js","webpack:///./src/arch/InstructionFormat.js","webpack:///./src/sim/Decoder.js","webpack:///./src/sim/CPUSim.js","webpack:///./src/tests/gpuTest.js","webpack:///./src/sim/GraphicsBufferSim.js","webpack:///./src/sim/DebugUtils.js"],"names":["GPUSimGUI","props","SCREEN_CANVAS_DIMS","SCREEN_BOUNDING_RECT","screenCtx","screenCanvas","getContext","controller","startSim","width","height","marginTop","marginBottom","canvas","Component","init","render","document","getElementById","module","exports","Vector","x","y","oVec","scale","Math","floor","sqrt","dot","atan2","r","phi","cos","sin","Dimensions","pos","isPointInRect","Rect","oDims","dims","left","right","top","bottom","Array2D","data","Utils","flatten","MouseButton","MOUSE_LEFT","MOUSE_MIDDLE","MOUSE_RIGHT","p","rect","length","func","Array","fill","undefined","map","unused","i","compute1DArray","i2","compute2DArray","arr","result","push","num","min","max","str","targetLen","padChar","res","DIRS4","FRAME_INTERVAL","GPUSimController","screenBoundingRect","sim","loadProgram","parseInt","RAY_BIT","prevFrameTime","simRunning","debug_cycle_countdown","Date","now","requestAnimationFrame","updateSimWrapper","runCycle","stopSim","currFrameTime","elapsed","updateSim","FullSystemSim","screen","gpu","cpu","graphicsBuffer","attachGraphicsBuffer","attachScreen","attachGPU","flush","binary","entries","val","memory","inputBuffer","get","Format","SCREEN_COLOURS_DEFAULT","Uint32Array","SCREEN_INITIAL_COLOUR_DEFAULT","colourToCSSString","colour","padStr","toString","ScreenSim","ctx","boundingRect","pixDims","SCREEN_WIDTH","SCREEN_HEIGHT","colours","initialColour","buffer","instruction","fillStyle","fillRect","opcode","GPU_OPCODE_OFFSET","GPU_OPCODE_LENGTH","SCREEN_OPCODE","updateColour","SCREEN_UPDATE_COLOUR_FLAG_OFFSET","SCREEN_COLOUR_OFFSET","SCREEN_COLOUR_LENGTH","SCREEN_FLUSH_FLAG_OFFSET","colourVal","TT_OVERWRITE","FILLED_COLUMN","GPU_REG_HEIGHT","GPUSim","regs","NUM_GPU_REG","GPU_REG_WIDTH","disabled","reg1","GPU_REG1_OFFSET","GPU_REG_LENGTH","reg2","GPU_REG2_OFFSET","coreshift","GPU_CORESHIFT_FLAG_OFFSET","coreshiftDir","GPU_CORESHIFT_DIR_OFFSET","bitshift","GPU_BITSHIFT_FLAG_OFFSET","bitshiftDir","GPU_BITSHIFT_DIR_OFFSEt","truthTable","writeEnable","GPU_WRITE_ENABLE_OFFSET","writeReg","GPU_WRITE_REG_OFFSET","updateGraphicsBuffer","isScreenCommand","SCREEN_UPDATE_GRAPHICS_BUFFER_FLAG_OFFSET","reg1Val","oi","columnVal","console","log","reg2Val","tti","set","Arch","NUM_REG","CPU_RAM_SIZE","NUM_COLOURS","WORD_WIDTH","WORD_MASK","WORD_MAX","WORD_MIN","InstructionFormat","UPDATE_FLAGS_OFFSET","OPCODE_OFFSET","REG1_OFFSET","IMMREG_FLAG_OFFSET","IMM_OFFSET","IMM_WIDTH","IMM_MASK","IMM_MAX","IMM_MIN","GPU_BITSHIFT_DIR_OFFSET","extractField","offset","extractBool","CPUSim","programCounter","logWord","isGPUCommand","GraphicsBufferSim","reg","DebugUtils","logGPUReg","word"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6f0116c72fef2ae71bd","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Utils, Dimensions, Vector, Rect} from 'utils/Utils.js';\nimport GPUSimController from 'GPUSimController.js';\n\nclass GPUSimGUI extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.SCREEN_CANVAS_DIMS = new Dimensions(400, 400);\n\t\tthis.SCREEN_BOUNDING_RECT = new Rect(\n\t\t\tnew Vector(0, 0),\n\t\t\tthis.SCREEN_CANVAS_DIMS\n\t\t);\n\t}\n\tcomponentDidMount(){\n\t\tthis.screenCtx = this.screenCanvas.getContext('2d');\n\t\tthis.controller = new GPUSimController(this.screenCtx, this.SCREEN_BOUNDING_RECT);\n\t\tthis.controller.startSim();\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<canvas key=\"mainCanvas\" width={this.SCREEN_CANVAS_DIMS.width} height={this.SCREEN_CANVAS_DIMS.height} style={{marginTop: '10px', marginBottom: '40px'}} ref={canvas => {this.screenCanvas = canvas;}}>\n\t\t\t\t\tIt's about time you upgrade your browser.\n\t\t\t\t</canvas>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nfunction init(){\n    ReactDOM.render(<GPUSimGUI />, document.getElementById('indexContainer'));\n}\n\nmodule.exports = {\n\tinit: init\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/GPUSimEntry.jsx","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 2\n// module chunks = 0","class Vector{\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n    }\n    static fromPolar(r, phi){\n        return new Vector(\n            r * Math.cos(phi),\n            r * Math.sin(phi)\n        );\n    }\n    add(oVec){\n        return new Vector(\n            this.x + oVec.x,\n            this.y + oVec.y\n        );\n    }\n    subtract(oVec){\n        return new Vector(\n            this.x - oVec.x,\n            this.y - oVec.y\n        );\n    }\n    multiply(scale){\n        return new Vector(\n            this.x * scale,\n            this.y * scale\n        );\n    }\n    divide(scale){\n        return new Vector(\n            this.x / scale,\n            this.y / scale\n        );\n    }\n    equals(oVec){\n        return (\n            this.x == oVec.x &&\n            this.y == oVec.y\n        );\n    }\n    floor(){\n        return new Vector(\n            Math.floor(this.x),\n            Math.floor(this.y)\n        );\n    }\n    dot(oVec){\n        return this.x * oVec.x + this.y * oVec.y;\n    }\n    getLength(){\n        return Math.sqrt(this.dot(this));\n    }\n    getAngle(){\n        return Math.atan2(this.y, this.x);\n    }\n    toArray(){\n        return [this.x, this.y];\n    }\n};\n\nclass Dimensions{\n    constructor(width, height){\n        this.width = width;\n        this.height = height;\n    }\n    contains(pos){\n        return isPointInRect(pos,\n            new Rect(\n                new Vector(0, 0),\n                this\n            )\n        );\n    }\n    getArea(){\n        return this.width * this.height;\n    }\n    equals(oDims){\n        return this.width == oDims.width && this.height == oDims.height;\n    }\n    toArray(){\n        return [this.width, this.height];\n    }\n};\n\nclass Rect{\n    constructor(pos, dims){\n        this.pos = pos;\n        this.dims = dims;\n    }\n    get x(){\n        return this.pos.x;\n    }\n    get y(){\n        return this.pos.y;\n    }\n    get width(){\n        return this.dims.width;\n    }\n    get height(){\n        return this.dims.height;\n    }\n    get left(){\n        return this.pos.x;\n    }\n    get right(){\n        return this.pos.x + this.dims.width;\n    }\n    get top(){\n        return this.pos.y;\n    }\n    get bottom(){\n        return this.pos.y + this.dims.height;\n    }\n    static fromBounds(left, right, top, bottom){\n        return new Rect(\n            new Vector(left, top),\n            new Dimensions(right - left, bottom - top)\n        );\n    }\n};\n\nclass Array2D{\n    constructor(dims, data){\n        this.dims = dims;\n        this.data = data;\n    }\n    get width(){\n        return this.dims.width;\n    }\n    get height(){\n        return this.dims.height;\n    }\n    getFlatArr(){\n        return Utils.flatten(this.data);\n    }\n};\n\nclass MouseButton{\n};\nMouseButton.MOUSE_LEFT = 0;\nMouseButton.MOUSE_MIDDLE = 1;\nMouseButton.MOUSE_RIGHT = 2;\n\nclass Utils{\n    static isPointInRect(p, rect){\n        return p.x >= rect.left && p.x < rect.right &&\n               p.y >= rect.top && p.y < rect.bottom;\n    }\n    static compute1DArray(length, func){\n        return new Array(length).fill(undefined).map(\n            (unused, i) => func(i)\n        );\n    }\n    static compute2DArray(dims, func){\n        return Utils.compute1DArray(dims.height,\n            i => Utils.compute1DArray(dims.width,\n                i2 => func(new Vector(i2, i))\n            )\n        );\n    }\n    static compute2DArrayAsArray2D(dims, func){\n        return new Array2D(dims, Utils.compute2DArray(dims, func));\n    }\n    static flatten(arr){\n        const result = [];\n        for(let i = 0; i < arr.length; i++){\n            for(let i2 = 0; i2 < arr[i].length; i2++){\n                result.push(arr[i][i2]);\n            }\n        }\n        return result;\n    }\n    static clamp(num, min, max){\n        return (num <= min) ? min : ((num >= max) ? max : num);\n    }\n\tstatic padStr(str, targetLen, padChar = '0'){\n\t\tlet res = '';\n\t\tfor(let i = 0; i < targetLen - str.length; i++)\n\t\t\tres += padChar;\n\t\tres += str;\n\t\treturn res;\n\t}\n};\nUtils.DIRS4 = [\n    new Vector(1, 0),\n    new Vector(0, 1),\n    new Vector(-1, 0),\n    new Vector(0, -1)\n];\n\nmodule.exports = {\n    Vector: Vector,\n    Dimensions: Dimensions,\n    Rect: Rect,\n    Array2D: Array2D,\n    MouseButton: MouseButton,\n    Utils: Utils\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Utils.js","import Arch from 'arch/Arch.js';\nimport FullSystemSim from 'sim/FullSystemSim.js';\nimport gpuTest from 'tests/gpuTest.js';\n\nconst FRAME_INTERVAL = 1000.0 / 60.0;\n\nclass GPUSimController {\n\tconstructor(screenCtx, screenBoundingRect){\n\t\tthis.sim = new FullSystemSim(screenCtx, screenBoundingRect);\n\t\tthis.sim.loadProgram(gpuTest.map(str => (parseInt(str, 2) & (~ Arch.RAY_BIT))));\n\t\tthis.prevFrameTime = 0;\n\t\tthis.simRunning = false;\n\t\tthis.debug_cycle_countdown = 3;\n\t}\n\tstartSim(){\n\t\tthis.prevFrameTime = Date.now();\n\t\tthis.simRunning = true;\n\t\trequestAnimationFrame(() => this.updateSimWrapper());\n\t}\n\tupdateSim(){\n\t\tthis.sim.runCycle();\n\t\tthis.debug_cycle_countdown--;\n\t\tif(this.debug_cycle_countdown == 0) this.stopSim();\n\t}\n\tupdateSimWrapper(){\n\t\tif(!this.simRunning) return;\n\t\tconst currFrameTime = Date.now();\n\t\tconst elapsed = currFrameTime - this.prevFrameTime;\n\t\tif(elapsed >= FRAME_INTERVAL){\n\t\t\tthis.prevFrameTime += FRAME_INTERVAL;\n\t\t\tthis.updateSim();\n\t\t}\n\t\trequestAnimationFrame(() => this.updateSimWrapper());\n\t}\n\tstopSim(){\n\t\tthis.simRunning = false;\n\t}\n};\n\nmodule.exports = GPUSimController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GPUSimController.js","import ScreenSim from 'sim/ScreenSim.js';\nimport GPUSim from 'sim/GPUSim.js';\nimport CPUSim from 'sim/CPUSim.js';\nimport GraphicsBufferSim from 'sim/GraphicsBufferSim.js';\nimport DebugUtils from 'sim/DebugUtils.js';\n\nclass FullSystemSim {\n\tconstructor(screenCtx, screenBoundingRect){\n\t\tthis.screen = new ScreenSim(screenCtx, screenBoundingRect);\n\t\tthis.gpu = new GPUSim();\n\t\tthis.cpu = new CPUSim();\n\t\tthis.graphicsBuffer = new GraphicsBufferSim();\n\t\tthis.gpu.attachGraphicsBuffer(this.graphicsBuffer);\n\t\tthis.cpu.attachScreen(this.screen);\n\t\tthis.cpu.attachGPU(this.gpu);\n\t\tthis.screen.flush();\n\t}\n\tloadProgram(binary){\n\t\tfor(const [i, val] of binary.entries()){\n\t\t\tthis.cpu.memory[i] = val;\n\t\t}\n\t}\n\trunCycle(){\n\t\tthis.cpu.runCycle();\n\t\tthis.gpu.runCycle();\n\t\tthis.screen.inputBuffer = this.graphicsBuffer.get();\n\t\tthis.screen.runCycle();\n\t}\n};\n\nmodule.exports = FullSystemSim;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/FullSystemSim.js","import {Dimensions, Vector, Utils} from 'utils/Utils.js';\nimport Arch from 'arch/Arch.js';\nimport InstructionFormat from 'arch/InstructionFormat.js';\nimport {extractField, extractBool} from 'sim/Decoder.js';\nimport DebugUtils from 'sim/DebugUtils.js';\n\nconst Format = InstructionFormat;\n\nconst SCREEN_COLOURS_DEFAULT = new Uint32Array([\n\t0xDDDDDD,\n\t0xDB7D3E,\n\t0xB350BC,\n\t0x6B8AC9,\n\t0xB1A627,\n\t0x41AE38,\n\t0xD08499,\n\t0x404040,\n\t0x9AA1A1,\n\t0x2E6E89,\n\t0x7E3DB5,\n\t0x2E388D,\n\t0x4F321F,\n\t0x35461B,\n\t0x963430,\n\t0x191616\n]);\nconst SCREEN_INITIAL_COLOUR_DEFAULT = 0xF;\n\nfunction colourToCSSString(colour){\n\treturn '#' + Utils.padStr(colour.toString(16), 6);\n}\n\nclass ScreenSim {\n\tconstructor(ctx, boundingRect){\n\t\tthis.ctx = ctx;\n\t\tthis.boundingRect = boundingRect;\n\t\t\n\t\tthis.pixDims = new Dimensions(\n\t\t\tthis.boundingRect.width / Arch.SCREEN_WIDTH,\n\t\t\tthis.boundingRect.height / Arch.SCREEN_HEIGHT\n\t\t);\n\n\t\tthis.colours = SCREEN_COLOURS_DEFAULT;\n\t\tconst initialColour = SCREEN_INITIAL_COLOUR_DEFAULT;\n\t\tthis.buffer = new Uint32Array(Arch.SCREEN_HEIGHT * Arch.SCREEN_WIDTH).fill(\n\t\t\tthis.colours[initialColour]\n\t\t);\n\t\tthis.colour = initialColour;\n\t\tthis.inputBuffer = new Uint32Array(Arch.SCREEN_WIDTH);\n\t\tthis.instruction = 0;\n\t}\n\tflush(){\n\t\tfor(let i = 0; i < Arch.SCREEN_HEIGHT; i++){\n\t\t\tfor(let i2 = 0; i2 < Arch.SCREEN_WIDTH; i2++){\n\t\t\t\tthis.ctx.fillStyle = colourToCSSString(\n\t\t\t\t\tthis.buffer[i * Arch.SCREEN_WIDTH + i2]\n\t\t\t\t);\n\t\t\t\tthis.ctx.fillRect(\n\t\t\t\t\tthis.boundingRect.x + i2 * this.pixDims.width,\n\t\t\t\t\tthis.boundingRect.y + i * this.pixDims.height,\n\t\t\t\t\tthis.pixDims.width, this.pixDims.height\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\trunCycle(){\n\t\tconst instruction = this.instruction;\n\t\tconst opcode = extractField(instruction, Format.GPU_OPCODE_OFFSET, Format.GPU_OPCODE_LENGTH);\n\t\tif(opcode != Format.SCREEN_OPCODE) return;\n\t\tconst updateColour = extractBool(instruction, Format.SCREEN_UPDATE_COLOUR_FLAG_OFFSET);\n\t\tconst colour = extractField(instruction, Format.SCREEN_COLOUR_OFFSET, Format.SCREEN_COLOUR_LENGTH);\n\t\tconst flush = extractBool(instruction, Format.SCREEN_FLUSH_FLAG_OFFSET);\n\t\tif(updateColour) this.colour = colour;\n\t\tconst colourVal = this.colours[this.colour];\n\t\tfor(let i = 0; i < Arch.SCREEN_HEIGHT; i++){\n\t\t\tfor(let i2 = 0; i2 < Arch.SCREEN_WIDTH; i2++){\n\t\t\t\tif(((this.inputBuffer[i2] >> i) & 1) == 1)\n\t\t\t\t\tthis.buffer[i * Arch.SCREEN_WIDTH + i2] = colourVal;\n\t\t\t}\n\t\t}\n\t\tif(flush) this.flush();\n\t}\n};\n\nmodule.exports = ScreenSim;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/ScreenSim.js","import Arch from 'arch/Arch.js';\nimport InstructionFormat from 'arch/InstructionFormat.js';\nimport {extractField, extractBool} from 'sim/Decoder.js';\nimport DebugUtils from 'sim/DebugUtils.js';\n\nconst Format = InstructionFormat;\nconst TT_OVERWRITE = 0b0011;\nconst FILLED_COLUMN = (1 << Arch.GPU_REG_HEIGHT) - 1;\n\nclass GPUSim {\n\tconstructor(){\n\t\tthis.regs = new Array(Arch.NUM_GPU_REG).fill(\n\t\t\tnew Uint32Array(Arch.GPU_REG_WIDTH).fill(0)\n\t\t);\n\t\tthis.instruction = 0;\n\t\tthis.disabled = false;\n\t}\n\tattachGraphicsBuffer(graphicsBuffer){\n\t\tthis.graphicsBuffer = graphicsBuffer;\n\t}\n\trunCycle(){\n\t\tif(!this.disabled){\n\t\t\tconst instruction = this.instruction;\n\t\t\tconst opcode = extractField(instruction, Format.GPU_OPCODE_OFFSET, Format.GPU_OPCODE_LENGTH);\n\t\t\tconst reg1 = extractField(instruction, Format.GPU_REG1_OFFSET, Format.GPU_REG_LENGTH);\n\t\t\tconst reg2 = extractField(instruction, Format.GPU_REG2_OFFSET, Format.GPU_REG_LENGTH);\n\t\t\tconst coreshift = extractBool(instruction, Format.GPU_CORESHIFT_FLAG_OFFSET);\n\t\t\tlet coreshiftDir = (extractField(instruction, Format.GPU_CORESHIFT_DIR_OFFSET, 1) == 1) ? 1 : -1;\n\t\t\tif(!coreshift) coreshiftDir = 0;\n\t\t\tconst bitshift = extractBool(instruction, Format.GPU_BITSHIFT_FLAG_OFFSET);\n\t\t\tlet bitshiftDir = (extractField(instruction, Format.GPU_BITSHIFT_DIR_OFFSEt, 1) == 1) ? 1 : -1;\n\t\t\tif(!bitshift) bitshiftDir = 0;\n\t\t\tlet truthTable = opcode;\n\t\t\tlet writeEnable = extractBool(instruction, Format.GPU_WRITE_ENABLE_OFFSET);\n\t\t\tconst writeReg = extractField(instruction, Format.GPU_WRITE_REG_OFFSET, Format.GPU_REG_LENGTH);\n\t\t\tlet updateGraphicsBuffer = true;\n\t\t\tconst isScreenCommand = opcode == Format.SCREEN_OPCODE;\n\t\t\tif(isScreenCommand){\n\t\t\t\tupdateGraphicsBuffer = extractBool(instruction, Format.SCREEN_UPDATE_GRAPHICS_BUFFER_FLAG_OFFSET);\n\t\t\t\twriteEnable = false;\n\t\t\t\ttruthTable = TT_OVERWRITE;\n\t\t\t}\n\n\t\t\tconst reg1Val = new Uint32Array(Arch.GPU_REG_WIDTH);\n\t\t\tfor(let i = 0; i < Arch.GPU_REG_WIDTH; i++){\n\t\t\t\tconst oi = i + coreshiftDir;\n\t\t\t\tlet columnVal = (oi >= 0 && oi < Arch.GPU_REG_WIDTH) ? this.regs[reg1][oi] : 0;\n\t\t\t\tif(bitshiftDir == -1) columnVal <<= 1;\n\t\t\t\telse if(bitshiftDir == 1) columnVal >>= 1;\n\t\t\t\treg1Val[i] = columnVal;\n\t\t\t}\n\t\t\tconsole.log(truthTable);\n\t\t\tconst reg2Val = this.regs[reg2];\n\t\t\tconst result = new Uint32Array(Arch.GPU_REG_WIDTH).fill(0);\n\t\t\tfor(let i = 0; i < Arch.GPU_REG_WIDTH; i++){\n\t\t\t\tfor(let tti = 0; tti < 4; tti++){\n\t\t\t\t\tif(extractBool(truthTable, 4 - tti - 1))\n\t\t\t\t\t\tresult[i] |= (reg1Val[i] ^ (extractBool(tti, 1) ? 0 : FILLED_COLUMN)) & (reg2Val[i] ^ (extractBool(tti, 0) ? 0 : FILLED_COLUMN));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(updateGraphicsBuffer) this.graphicsBuffer.set(result);\n\t\t\tif(writeEnable) this.regs[writeReg] = result;\n\t\t}\n\t\tthis.disabled = false;\n\t}\n};\n\nmodule.exports = GPUSim;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/GPUSim.js","class Arch {\n};\n\nArch.SCREEN_WIDTH = 20;\nArch.SCREEN_HEIGHT = 20;\n\nArch.NUM_REG = 32;\nArch.CPU_RAM_SIZE = 1 << 10;\n\nArch.NUM_GPU_REG = 32;\nArch.GPU_REG_WIDTH = 20;\nArch.GPU_REG_HEIGHT = 20;\n\nArch.NUM_COLOURS = (1 << 4);\n\nArch.WORD_WIDTH = 29;\nArch.WORD_MASK = 1 << Arch.WORD_WIDTH;\nArch.WORD_MAX = 1 << (Arch.WORD_WIDTH - 1);\nArch.WORD_MIN = -(1 << (Arch.WORD_WIDTH - 1));\n\nArch.RAY_BIT = 0x20000000;\n\nmodule.exports = Arch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/arch/Arch.js","class InstructionFormat {\n};\n\nInstructionFormat.UPDATE_FLAGS_OFFSET = 28;\nInstructionFormat.OPCODE_OFFSET = 22;\n\nInstructionFormat.REG1_OFFSET = 18;\nInstructionFormat.IMMREG_FLAG_OFFSET = 17;\n\nInstructionFormat.IMM_OFFSET = 0;\nInstructionFormat.IMM_WIDTH = 17;\nInstructionFormat.IMM_MASK = 1 << InstructionFormat.IMM_WIDTH;\nInstructionFormat.IMM_MAX = 1 << (InstructionFormat.IMM_WIDTH - 1);\nInstructionFormat.IMM_MIN = -(1 << (InstructionFormat.IMM_WIDTH - 1));\n\n\nInstructionFormat.GPU_WRITE_REG_OFFSET = 0;\nInstructionFormat.GPU_WRITE_ENABLE_OFFSET = 5;\nInstructionFormat.GPU_REG2_OFFSET = 6;\nInstructionFormat.GPU_REG1_OFFSET = 11;\nInstructionFormat.GPU_BITSHIFT_DIR_OFFSET = 16;\nInstructionFormat.GPU_BITSHIFT_FLAG_OFFSET = 17;\nInstructionFormat.GPU_CORESHIFT_DIR_OFFSET = 18;\nInstructionFormat.GPU_CORESHIFT_FLAG_OFFSET = 19;\nInstructionFormat.GPU_REG_LENGTH = 5;\n\nInstructionFormat.GPU_OPCODE_OFFSET = 20;\nInstructionFormat.GPU_OPCODE_LENGTH = 4;\n\nInstructionFormat.SCREEN_COLOUR_OFFSET = 0;\nInstructionFormat.SCREEN_COLOUR_LENGTH = 4;\nInstructionFormat.SCREEN_FLUSH_FLAG_OFFSET = 8;\nInstructionFormat.SCREEN_UPDATE_COLOUR_FLAG_OFFSET = 9;\nInstructionFormat.SCREEN_UPDATE_GRAPHICS_BUFFER_FLAG_OFFSET = 10;\nInstructionFormat.SCREEN_OPCODE = 0b0000;\n\nmodule.exports = InstructionFormat;\n\n\n\n// WEBPACK FOOTER //\n// ./src/arch/InstructionFormat.js","function extractField(instruction, offset, length){\n\treturn (instruction >> offset) & ((1 << length) - 1);\n}\n\nfunction extractBool(instruction, offset){\n\treturn extractField(instruction, offset, 1) == 1;\n}\n\nmodule.exports = {\n\textractField: extractField,\n\textractBool: extractBool\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/Decoder.js","import Arch from 'arch/Arch.js';\nimport InstructionFormat from 'arch/InstructionFormat.js';\nimport {extractField, extractBool} from 'sim/Decoder.js';\nimport DebugUtils from 'sim/DebugUtils.js';\n\nconst Format = InstructionFormat;\n\nclass CPUSim{\n\tconstructor(){\n\t\tthis.memory = new Uint32Array(Arch.CPU_RAM_SIZE);\n\t\tthis.programCounter = 0;\n\t}\n\tattachScreen(screen){\n\t\tthis.screen = screen;\n\t}\n\tattachGPU(gpu){\n\t\tthis.gpu = gpu;\n\t}\n\trunCycle(){\n\t\tconst instruction = this.memory[this.programCounter];\n\t\tDebugUtils.logWord(instruction);\n\t\tthis.programCounter = (this.programCounter + 1) % Arch.CPU_RAM_SIZE;\n\t\tthis.gpu.instruction = instruction;\n\t\tthis.screen.instruction = instruction;\n\t\tconst isGPUCommand = true;\n\t\tif(!isGPUCommand) this.gpu.disabled = true;\n\t}\n};\n\nmodule.exports = CPUSim;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/CPUSim.js","module.exports = [\"100000100100000000000000100000\",\"100000001110000000000001100001\",\"100000000000000000001100001110\"];\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/gpuTest.js","import Arch from 'arch/Arch.js';\nimport DebugUtils from 'sim/DebugUtils.js';\n\nclass GraphicsBufferSim {\n\tconstructor(){\n\t\tthis.reg = new Uint32Array(Arch.GPU_REG_WIDTH);\n\t}\n\tset(val){\n\t\tthis.reg = val;\n\t}\n\tget(){\n\t\treturn this.reg;\n\t}\n};\n\nmodule.exports = GraphicsBufferSim;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/GraphicsBufferSim.js","import Arch from 'arch/Arch.js';\nimport {Utils} from 'utils/Utils.js';\n\nclass DebugUtils {\n};\n\nDebugUtils.logGPUReg = (reg) => {\n\tlet str = '';\n\tfor(let i = 0; i < Arch.GPU_REG_HEIGHT; i++){\n\t\tfor(let i2 = 0; i2 < Arch.GPU_REG_WIDTH; i2++){\n\t\t\tstr += ((reg[i2] >> i) & 1).toString();\n\t\t}\n\t\tstr += '\\n';\n\t}\n\tconsole.log(str);\n};\n\nDebugUtils.logWord = (word) => {\n\tconsole.log(Utils.padStr(word.toString(2), 29));\n};\n\nmodule.exports = DebugUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sim/DebugUtils.js"],"sourceRoot":""}